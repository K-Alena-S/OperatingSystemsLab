    localtime(): Эта функция заполняет значениями поля структуры tm.
 struct tm {
    int tm_sec;    seconds after minute [0,61]
    int tm_min;    minutes after the hour [0,59]
    int tm_hour;   hour since midnight [0,23]
    int tm_mday;   day of the month [1,31]
    int tm_mon;    months since January [0,11]
    int tm_year;   years since 1900
    int tm_wday;   days since Sunday [0,6]
    int tm_yday;   days since January 1 [0,365]
    int tm_isdst;  flag for alternate daylight savings time
};
  Функция localtime() преобразует календарное время timep в локальное, определенное в соответствии с заданной пользователем временной зоной. 
Функция работает так, как будто она вызывает tzset(3), и устанавливает внешние переменные: tzname в значение текущей временной зоны,
timezone в значение разницы в секундах между всеобщим скоординированным временем (UTC) и локальным стандартом времени и daylight в ненулевое значение, 
если используются стандартные правила "летнего" времени. Возвращаемое значение указывает на статически выделенную структуру, 
содержимое которой может быть перезаписано последующими вызовами любых функций, работающих с датой и временем.

     perror(): создает сообщение, описывающее последнюю ошибку, обнаруженную во время вызова системной или библиотечной функции.
   Выводится строка аргумента s, за которой следует двоеточие и пробел, за которыми следует сообщение об ошибке из errno. 
   Номер ошибки хранится в переменной errno (определенной в файле errno.h). Доступ к системным сообщениям об ошибках осуществляется через переменную sys_errlist,
   которая представляет собой массив сообщений об ошибке, отсортированный по номеру ошибки. 
   perror выводит соответствующее сообщение об ошибке , используя значение переводятся
   в качестве индекса для sys_errlist.

    Функция setenv() добавляет переменную имя к окружению со значением значение, если имени уже не существует. Если имя уже существует в окружении, 
то ее значение изменяется на значение, если флаг overwrite не равен нулю, а если overwrite равен нулю, то значение имя не изменяется.
    Функция setenv() возвращает ноль при успешном завершении вызова и -1, если в памяти среды было недостаточно места. 
    
    Процесс - это экземпляр исполняющейся программы вместе с данными этой программы и набором атрибутов, хранящихся в ядре операционной системы.

      Переменные окружения — это переменные, определяемые для текущей оболочки(программа, предоставляющая интерфейс 
   для взаимодействия пользователя с функциями системы) и наследуемые любыми дочерними оболочками или процессами.
