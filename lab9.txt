  fork 
  Возвращает 0 в дочернем процессе, идентификатор дочернего процесса – в родительском процессе, –1 в случае ошибки
  Процесс, сделавший вызов fork(2) называется родительским, а вновь созданный процесс — дочерним. 
  Новый процесс является точной копией породившего его процесса. Как это ни удивительно, но новый процесс имеет 
те же инструкции и данные, что и его родитель. Более того, выполнение родительского и дочернего процесса 
начнется с одной и той же инструкции, следующей за fork(2). Единственно, чем они различаются — это 
идентификатором процесса PID. Каждый процесс имеет одного родителя, но может иметь несколько дочерних процессов.

  execlp
  Она замещает дочерний процесс новой программой из файла. Комбинация функций fork и exec – это своего
рода двухступенчатый системный вызов, порождающий новый процесс. В UNIX эти два этапа выделены в самостоятельные функции.
